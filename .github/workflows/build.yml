name: Build

on:
  push:
    branches: [master]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: cache node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "12"

      - name: install and build
        run: |
          npm ci
          npm run lint
          npm run type-check
          npm run build
          npm run docs
          # check that hls.js doesn't error if requiring in node
          # see https://github.com/video-dev/hls.js/pull/1642
          node -e 'require("./" + require("./package.json").main)'
        env:
          CI: true

      - name: upload build
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: |
            **
            !**/[.]*/**
            !**/node_modules/

  test_unit:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: cache node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "12"

      - name: download build
        uses: actions/download-artifact@v2
        with:
          name: build

      - name: run unit tests
        run: |
          npm ci
          npm run test:unit
        env:
          CI: true

  test_functional_required:
    needs: test_unit
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      max-parallel: 8
      matrix:
        config: [chrome-win_10]

        include:
          - config: chrome-win_10
            ua: chrome
            os: Windows 10

    steps:
      - uses: actions/checkout@v2

      - name: cache node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "12"

      - name: download build
        uses: actions/download-artifact@v2
        with:
          name: build

      - name: start SauceConnect tunnel
        uses: saucelabs/sauce-connect-action@a0930f1
        with:
          username: ${{ secrets.SAUCE_USERNAME }}
          accessKey: ${{ secrets.SAUCE_ACCESS_KEY }}
          tunnelIdentifier: ${{ github.run_id }}-${{ matrix.config }}

      - name: run functional tests
        run: |
          npm ci
          npm run test:func
        env:
          CI: true
          SAUCE_TUNNEL_ID: ${{ github.run_id }}-${{ matrix.config }}
          SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
          SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
          UA: ${{ matrix.ua }}
          UA_VERSION: ${{ matrix.uaVersion }}
          OS: ${{ matrix.os }}

  test_functional_optional:
    needs: test_functional_required
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      max-parallel: 8
      matrix:
        config:
          - safari-osx_10.15
          - firefox-win_10
          - chrome-osx_10.11-79.0
          - internet_explorer-win_10
          - internet_explorer-win_8.1-11.0
          - chrome-win_7-69.0
          - safari-osx_10.12-10.1

        include:
          - config: safari-osx_10.15
            ua: safari
            os: OS X 10.15
          - config: firefox-win_10
            ua: firefox
            os: Windows 10
          - config: chrome-osx_10.11-79.0
            ua: chrome
            os: OS X 10.11
            uaVersion: "79.0"
          - config: internet_explorer-win_10
            ua: internet explorer
            os: Windows 10
          - config: internet_explorer-win_8.1-11.0
            ua: internet explorer
            os: Windows 8.1
            uaVersion: "11.0"
          - config: chrome-win_7-69.0
            ua: chrome
            os: Windows 7
            uaVersion: "69.0"
          - config: safari-osx_10.12-10.1
            ua: safari
            os: OS X 10.12
            uaVersion: "10.1"

    steps:
      - uses: actions/checkout@v2

      - name: cache node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "12"

      - name: download build
        uses: actions/download-artifact@v2
        with:
          name: build

      - name: start SauceConnect tunnel
        uses: saucelabs/sauce-connect-action@a0930f1
        with:
          username: ${{ secrets.SAUCE_USERNAME }}
          accessKey: ${{ secrets.SAUCE_ACCESS_KEY }}
          tunnelIdentifier: ${{ github.run_id }}-${{ matrix.config }}

      - name: run functional tests
        run: |
          npm ci
          npm run test:func
        env:
          CI: true
          SAUCE_TUNNEL_ID: ${{ github.run_id }}-${{ matrix.config }}
          SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
          SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
          UA: ${{ matrix.ua }}
          UA_VERSION: ${{ matrix.uaVersion }}
          OS: ${{ matrix.os }}
